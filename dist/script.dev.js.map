{"version":3,"sources":["script.js"],"names":["world","document","querySelector","canvas","getElementById","score","days","endScreen","c","getContext","width","clientWidth","height","clientHeight","frames","keys","ArrowLeft","pessed","ArrowRight","pressed","fired","count","innerHTML","intervalId","counter","finish","clearInterval","setInterval","start","bip","Player","velocity","x","y","image","Image","src","onload","position","drawImage","missiles","push","Missile","draw","Alien","console","log","alienMissiles","alienMissile","save","fillStyle","fillRect","fill","restore","Grid","invaders","rows","Math","floor","colums","Particule","radius","color","opacity","globalAlpha","beginPath","arc","PI","closePath","grids","player","particules","lifes","init","animationLoop","clearRect","update","requestAnimationFrame","forEach","missile","index","setTimeout","splice","grid","indexGrid","length","random","shoot","invader","indexI","indexM","i","lostLife","particule","alert","addEventListener","event","key"],"mappings":"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","sourcesContent":["const world = document.querySelector('#gameBoard');\nconst canvas = document.getElementById('canvas');\nconst score = document.getElementById('score');\nconst days = document.getElementById('days');\nconst endScreen = document.getElementById('endScreen');\nconst c = world.getContext('2d');\nworld.width = world.clientWidth;\nworld.height = world.clientHeight;\n\nlet frames = 0;\nconst keys = {\n    ArrowLeft: { pessed: false },\n    ArrowRight: { pressed: false },\n    fired: { pressed: false }\n}\n\n// initialize score to 0\nlet count = 0;\nscore.innerHTML = count;\nvar intervalId = null;\nvar counter = 60;\ndays.innerHTML = counter;\n\nfunction finish() {\n    clearInterval(intervalId);\n    document.getElementById(\"days\").innerHTML = \"TERMINE!\";\n    clearInterval(intervalId);\n}\nsetInterval(() => {\n    counter--;\n    if (counter == 0) finish();\n    else {\n        document.getElementById(\"days\").innerHTML = counter + \" secondes restantes\";\n    }\n    counter = counter <= 0 ? 0 : counter - 0;\n\n}, 1000)\n\nfunction start() {\n    intervalId = setInterval(bip, 1000);\n}\nclass Player {\n    constructor() {\n        this.velocity = {\n            x: 0, // Vitesse de déplacement sur l'axe des X\n            y: 0 // Vitesse de déplacement sur l'axe des Y\n        }\n        const image = new Image();\n        image.src = './space.png';\n        image.onload = () => {\n            this.image = image;\n            this.width = 48; // Largeur du vaisseau\n            this.height = 48; // Hauteur du vaisseau\n            this.position = {\n                x: world.width / 2 - this.width / 2, // Position sur l'axe des x\n                y: world.height - this.height - 10 // Position sur l'axe des Y\n            }\n\n        }\n    }\n\n    draw() {\n        c.drawImage(this.image,\n            this.position.x,\n            this.position.y,\n            this.width,\n            this.height\n        );\n    }\n\n    shoot() {\n        missiles.push(new Missile({\n            position: {\n                x: this.position.x + this.width / 2,\n                y: this.position.y\n            },\n\n        }));\n    }\n\n    update() {\n        if (this.image) {\n            if (keys.ArrowLeft.pressed && this.position.x >= 0) {\n                this.velocity.x = -5;\n            } else if (keys.ArrowRight.pressed && this.position.x <= world.width - this.width) {\n                this.velocity.x = 5;\n            } else { this.velocity.x = 0; }\n            this.position.x += this.velocity.x;\n            this.draw();\n        }\n    }\n}\nclass Alien {\n    constructor({ position }) {\n        this.velocity = { x: 0, y: 0 }\n        const image = new Image();\n        image.src = './ghost.png';\n        image.onload = () => {\n            this.image = image;\n            this.width = 32;\n            this.height = 32;\n            this.position = {\n                x: position.x,\n                y: position.y\n            }\n        }\n\n    }\n    draw() {\n        if (this.image) {\n            c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height, );\n        }\n    }\n\n    update({ velocity }) {\n        if (this.image) {\n            this.position.x += velocity.x;\n            this.position.y += velocity.y;\n            if (this.position.y + this.height >= world.height) {\n                console.log('You loose');\n            }\n        }\n        this.draw();\n    }\n    shoot(alienMissiles) {\n        if (this.position) {\n            alienMissiles.push(new alienMissile({\n                position: {\n                    x: this.position.x,\n                    y: this.position.y\n                },\n                velocity: {\n                    x: 0,\n                    y: 3\n                }\n            }))\n        }\n    }\n}\n\nclass Missile {\n    constructor({ position }) {\n        this.position = position;\n        this.velocity = { x: 0, y: -5 };\n        this.width = 3;\n        this.height = 10;\n    }\n    draw() {\n        c.save();\n        c.fillStyle = 'red';\n        c.fillRect(this.position.x, this.position.y, this.width, this.height)\n        c.fill()\n        c.restore()\n\n\n    }\n    update() {\n        this.position.y += this.velocity.y;\n        this.draw();\n    }\n}\nclass Grid {\n    constructor() {\n        this.position = { x: 0, y: 0 }\n        this.velocity = { x: 1, y: 0 }\n        this.invaders = []\n        let rows = Math.floor((world.height / 34) * (1 / 5));\n        const colums = Math.floor((world.width / 34) * (2 / 5));\n        this.height = rows * 34;\n        this.width = colums * 34;\n        for (let x = 0; x < colums; x++) {\n            for (let y = 0; y < rows; y++) {\n                this.invaders.push(new Alien({\n                    position: {\n                        x: x * 34,\n                        y: y * 34\n                    }\n                }))\n            }\n        }\n    }\n    update() {\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n        this.velocity.y = 0;\n        if (this.position.x + this.width >= world.width || this.position.x == 0) {\n            this.velocity.x = -this.velocity.x;\n            this.velocity.y = 34;\n        }\n\n\n    }\n}\nclass Particule {\n    constructor({ position, velocity, radius, color }) {\n        this.position = position\n        this.velocity = velocity\n        this.radius = radius\n        this.color = color\n        this.opacity = 1\n    }\n    draw() {\n        c.save();\n        c.globalAlpha = this.opacity;\n        c.beginPath();\n        c.fillStyle = this.color;\n        c.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2)\n        c.fill()\n        c.closePath()\n        c.restore();\n    }\n    update() {\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n        if (this.opacity > 0) {\n            this.opacity -= 0.01;\n        }\n        this.draw()\n    }\n}\n\nclass alienMissile {\n    constructor({ position, velocity }) {\n        this.position = position;\n        this.velocity = velocity;\n        this.width = 3;\n        this.height = 10;\n    }\n    draw() {\n        // c.beginPath();\n        c.save();\n        c.fillStyle = 'yellow';\n        c.fillRect(this.position.x, this.position.y, this.width, this.height)\n        c.fill()\n        c.restore()\n    }\n    update() {\n        this.draw()\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n    }\n}\n\nlet missiles;\nlet alienMissiles;\nlet grids;\nlet player;\nlet particules;\nlet lifes;\n\nconst init = () => {\n    missiles = [];\n    alienMissiles = [];\n    grids = [new Grid()];\n    player = new Player();\n    particules = [];\n    lifes = 3;\n    keys.ArrowLeft.pressed = false;\n    keys.ArrowRight.pressed = false;\n    keys.fired.pressed = false;\n\n}\n\ninit();\n\n\nconst animationLoop = () => {\n    c.clearRect(0, 0, world.width, world.height);\n    player.update();\n    requestAnimationFrame(animationLoop);\n\n    missiles.forEach((missile, index) => {\n        if (missile.position.y + missile.height <= 0) {\n            setTimeout(() => {\n                missiles.splice(index, 1)\n\n            }, 0)\n        } else { missile.update(); }\n    })\n    grids.forEach((grid, indexGrid) => {\n        grid.update();\n        if (frames % 50 === 0 && grid.invaders.length > 0) {\n            grid.invaders[Math.floor(Math.random() * (grid.invaders.length))].shoot(alienMissiles)\n        }\n        grid.invaders.forEach((invader, indexI) => {\n            invader.update({ velocity: grid.velocity });\n            missiles.forEach((missile, indexM) => {\n                if (missile.position.y <= invader.position.y + invader.height &&\n                    missile.position.y >= invader.position.y &&\n                    missile.position.x + missile.width >= invader.position.x &&\n                    missile.position.x - missile.width <= invader.position.x + invader.width) {\n                    for (let i = 0; i < 12; i++) {\n                        particules.push(new Particule({\n                            position: {\n                                x: invader.position.x + invader.width / 2,\n                                y: invader.position.y + invader.height / 2\n                            },\n                            velocity: { x: (Math.random() - 0.5) * 2, y: (Math.random() - 0.5) * 2 },\n                            radius: Math.random() * 5 + 1,\n                            color: 'red'\n                        }))\n                    }\n                    setTimeout(() => {\n                        grid.invaders.splice(indexI, 1);\n                        missiles.splice(indexM, 1)\n                        count++;\n                        score.innerHTML = count;\n                        // counter--;\n                        // days.innerHTML = counter;\n                        if (grid.invaders.length === 0 && grids.length == 1) {\n                            grids.splice(indexGrid, 1);\n                            grids.push(new Grid());\n\n                        }\n                    }, 0)\n                }\n            })\n        })\n\n    })\n    alienMissiles.forEach((alienMissile, index) => {\n        if (alienMissile.position.y + alienMissile.height >= world.height) {\n            setTimeout(() => {\n                alienMissiles.splice(index, 1)\n            }, 0);\n\n        } else { alienMissile.update(); }\n        if (alienMissile.position.y + alienMissile.height >= player.position.y &&\n            alienMissile.position.y <= player.position.y + player.height &&\n            alienMissile.position.x >= player.position.x &&\n            alienMissile.position.x + alienMissile.width <= player.position.x + player.width) {\n            alienMissiles.splice(index, 1);\n\n            for (let i = 0; i < 22; i++) {\n                particules.push(new Particule({\n                    position: {\n                        x: player.position.x + player.width / 2,\n                        y: player.position.y + player.height / 2\n                    },\n                    velocity: { x: (Math.random() - 0.5) * 2, y: (Math.random() - 0.5) * 2 },\n                    radius: Math.random() * 5,\n                    color: 'white'\n                }))\n            }\n            lostLife();\n\n        }\n    })\n\n    particules.forEach((particule, index) => {\n        if (particule.opacity <= 0) {\n            particules.splice(index, 1)\n        } else {\n            particule.update();\n        }\n    })\n\n\n\n    frames++;\n}\nanimationLoop();\n\nconst lostLife = () => {\n    lifes--;\n    if (lifes <= 0) {\n        alert('perdu');\n        init();\n    }\n}\n\naddEventListener('keydown', (event) => {\n    switch (event.key) {\n        case 'ArrowLeft':\n            keys.ArrowLeft.pressed = true;\n            break;\n        case 'ArrowRight':\n            keys.ArrowRight.pressed = true;\n            break;\n    }\n    // if (daysRemaining > 0) {\n    //     daysRemaining--;\n    //     days.innerHTML = daysRemaining;\n    // }\n})\n\naddEventListener('keyup', (event) => {\n        switch (event.key) {\n            case 'ArrowLeft':\n                keys.ArrowLeft.pressed = false;\n                break;\n            case 'ArrowRight':\n                keys.ArrowRight.pressed = false;\n                break;\n            case ' ':\n                player.shoot();\n                break;\n        }\n        // let targetElement = e.target || e.srcElement;\n\n        // if (targetElement.classList.contains('virus')) {\n        //     targetElement.remove();\n        //     count++;\n        //     score.innerHTML = count;\n        // }\n\n    })\n    // daysLeft = 60;\n    // gameOverNumber = 50;\n    // loopPlay = false;\n\n// function start() {\n//     count = 0;\n//     getFaster = 6000;\n//     daysRemaining = daysLeft;\n\n//     canvas.innerHTML = '';\n//     score.innerHTML = count;\n//     days.innerHTML = daysRemaining;\n\n//     // make sure to not play loop several times\n//     loopPlay ? '' : game();\n//     loopPlay = true;\n\n//     function game() {\n//         let randomTime = Math.round(Math.random() * getFaster);\n//         getFaster > 700 ? getFaster = (getFaster * 0.90) : '';\n\n//         setTimeout(() => {\n//             if (daysRemaining === 0) {\n//                 youWin();\n//             } else if (canvas.childElementCount < gameOverNumber) {\n//                 animationLoop();\n//                 game();\n//             } else {\n//                 gameOver();\n//             }\n//         }, randomTime);\n//     };\n\n//     const gameOver = () => {\n//         endScreen.innerHTML = ` < div class = \"gameOver\" > Game over < br / > score: $ { count } < /div>`;\n//         endScreen.style.visibility = 'visible';\n//         endScreen.style.opacity = '1';\n//         loopPlay = false;\n//     };\n\n//     const youWin = () => {\n//         let accuracy = Math.round(count / daysLeft * 100);\n//         endScreen.innerHTML = `<div class=\"youWin\">Well done ! You overcome this mother fucker ! <br/><span>Accuarcy: ${accuracy} %</span></div>`;\n//         endScreen.style.visibility = 'visible';\n//         endScreen.style.opacity = '1';\n//         loopPlay = false;\n//     };\n// }\n// // remove element clicked\n// document.addEventListener(\"click\", function(e) {\n//     let targetElement = e.target || e.srcElement;\n\n//     if (targetElement.classList.contains(alien)) {\n//         targetElement.remove();\n//         count++;\n//         score.innerHTML = count;\n//     };\n// });\n\n// // hide and screen on click\n// endScreen.addEventListener('click', () => {\n//     start();\n//     setTimeout(() => {\n//         endScreen.style.visibility = 'hidden';\n//     }, 1000);\n// });"],"file":"script.dev.js"}